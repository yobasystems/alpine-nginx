# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- build
- test
- manifest
- deploy
include:
- remote: https://gitlab.com/yobasystems/gitlab-ci-templates/raw/master/container_scanning_all_arch.yml
- template: Security/Secret-Detection.gitlab-ci.yml
- template: Security/SAST.gitlab-ci.yml
amd64 nginx build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - amd64
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --no-cache git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-nginx-amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:amd64
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:amd64
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:x86_64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:x86_64 -t ${CI_APPLICATION_REPOSITORY}:${CI_APPLICATION_TAG} --platform linux/amd64 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:amd64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:x86_64
  - docker push ${CI_APPLICATION_REPOSITORY}:${CI_APPLICATION_TAG}
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:amd64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:x86_64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:amd64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:x86_64
amd64 nginx-git build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - amd64
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --no-cache git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-nginx-git-amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-amd64
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:git-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-amd64
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:git-x86_64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-x86_64 --platform linux/amd64 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-amd64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-x86_64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:git-amd64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:git-x86_64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-amd64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-x86_64
amd64 nginx-git-ssh build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - amd64
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --no-cache git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-nginx-git-ssh-amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-amd64
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-ssh-amd64
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-x86_64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-ssh-x86_64 --platform linux/amd64 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-amd64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-x86_64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-amd64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-x86_64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-ssh-amd64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-ssh-x86_64
arm64v8 nginx build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --no-cache git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-nginx-aarch64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm64v8
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:arm64v8
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:aarch64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:aarch64 --platform linux/arm64/v8 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm64v8
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:aarch64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:arm64v8
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:aarch64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:arm64v8
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:aarch64
arm64v8 nginx-git build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --no-cache git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-nginx-git-aarch64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-arm64v8
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:git-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-arm64v8
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:git-aarch64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-aarch64 --platform linux/arm64/v8 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-arm64v8
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-aarch64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:git-arm64v8
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:git-aarch64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-arm64v8
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-aarch64
arm64v8 nginx-git-ssh build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --no-cache git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-nginx-git-ssh-aarch64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-arm64v8
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-ssh-arm64v8
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-aarch64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-ssh-aarch64 --platform linux/arm64/v8 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-arm64v8
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-aarch64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-arm64v8
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-aarch64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-ssh-arm64v8
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-ssh-aarch64
arm32v7 nginx build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - armhf
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --no-cache git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-nginx-armhf/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm32v7
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:arm32v7
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:armhf
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:armhf --platform linux/arm/v7 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm32v7
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:armhf
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:arm32v7
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:armhf
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:arm32v7
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:armhf
arm32v7 nginx-git build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - armhf
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --no-cache git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-nginx-git-armhf/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-arm32v7
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:git-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-arm32v7
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:git-armhf
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-armhf --platform linux/arm/v7 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-arm32v7
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-armhf
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:git-arm32v7
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:git-armhf
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-arm32v7
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-armhf
arm32v7 nginx-git-ssh build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - armhf
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --no-cache git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-nginx-git-ssh-armhf/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-arm32v7
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-ssh-arm32v7
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-armhf
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-ssh-armhf --platform linux/arm/v7 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-arm32v7
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-armhf
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-arm32v7
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-armhf
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-ssh-arm32v7
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:git-ssh-armhf
amd64 nginx stable build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - amd64
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --no-cache git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-nginx-stable-amd64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-amd64
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-amd64 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:stable-amd64
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-x86_64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-x86_64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:stable-x86_64 -t ${CI_APPLICATION_REPOSITORY}:${CI_APPLICATION_TAG} --platform linux/amd64 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-amd64
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-x86_64
  - docker push ${CI_APPLICATION_REPOSITORY}:${CI_APPLICATION_TAG}
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-amd64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-x86_64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:stable-amd64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:stable-x86_64
arm64v8 nginx stable build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - aarch64
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --no-cache git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-nginx-stable-aarch64/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-arm64v8
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-arm64v8 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:stable-arm64v8
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-aarch64 -t $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-aarch64
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:stable-aarch64 --platform linux/arm64/v8 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-arm64v8
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-aarch64
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-arm64v8
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-aarch64
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:stable-arm64v8
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:stable-aarch64
arm32v7 nginx stable build:
  image: yobasystems/alpine-docker:dind
  stage: build
  tags:
  - armhf
  variables:
    CI_APPLICATION_REPOSITORY: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
    CI_APPLICATION_TAG: "$CI_COMMIT_SHA"
  script:
  - export COMMIT_TIME=$(git show -s --format=%ct $CI_APPLICATION_TAG)
  - echo "$COMMIT_TIME" && echo "$CI_COMMIT_SHORT_SHA"
  - apk add --no-cache git
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - cd alpine-nginx-stable-armhf/ && docker build --build-arg VCS_REF=${CI_COMMIT_SHORT_SHA}
    --build-arg BUILD_DATE=${COMMIT_TIME} -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-arm32v7
    -t $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-arm32v7 -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:stable-arm32v7
    -t $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-armhf -t $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-armhf
    -t $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:stable-armhf --platform linux/arm/v7 .
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-arm32v7
  - docker push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-armhf
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-arm32v7
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    && docker push $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-armhf
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:stable-arm32v7
  - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" quay.io --password-stdin
    && docker push $DOCKER_REGISTRY_QUAY/$DOCKER_REGISTRY_QUAY_REPO:stable-armhf
gitlab manifest creation:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - amd64
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:amd64
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm32v7
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm64v8
  - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:latest $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:amd64
    $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm64v8
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:latest $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:latest $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:latest $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:latest
dockerhub manifest creation:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - amd64
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:amd64
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:arm32v7
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:arm64v8
  - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:latest $DOCKER_REGISTRY_DOCKERHUB_REPO:amd64
    $DOCKER_REGISTRY_DOCKERHUB_REPO:arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:arm64v8
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:latest $DOCKER_REGISTRY_DOCKERHUB_REPO:amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:latest $DOCKER_REGISTRY_DOCKERHUB_REPO:arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:latest $DOCKER_REGISTRY_DOCKERHUB_REPO:arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:latest
gitlab manifest creation git tag:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - amd64
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-amd64
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-arm32v7
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-arm64v8
  - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-amd64
    $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git
dockerhub manifest creation git tag:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - amd64
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:git-amd64
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:git-arm32v7
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:git-arm64v8
  - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:git $DOCKER_REGISTRY_DOCKERHUB_REPO:git-amd64
    $DOCKER_REGISTRY_DOCKERHUB_REPO:git-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:git-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:git $DOCKER_REGISTRY_DOCKERHUB_REPO:git-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:git $DOCKER_REGISTRY_DOCKERHUB_REPO:git-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:git $DOCKER_REGISTRY_DOCKERHUB_REPO:git-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:git
gitlab manifest creation git-ssh tag:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - amd64
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-amd64
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-arm32v7
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-arm64v8
  - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-amd64
    $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:git-ssh
dockerhub manifest creation git-ssh tag:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - amd64
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-amd64
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-arm32v7
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-arm64v8
  - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-amd64
    $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:git-ssh
gitlab manifest stable creation:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - amd64
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token "$DOCKER_REGISTRY" --password-stdin
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-amd64
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-arm32v7
  - docker pull $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-arm64v8
  - docker manifest create $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-amd64
    $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-arm32v7 $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY/$DOCKER_REGISTRY_REPO:stable
dockerhub manifest stable creation:
  image: yobasystems/alpine-docker:dind
  stage: manifest
  tags:
  - amd64
  script:
  - mkdir /root/.docker
  - 'echo -e "{\n    \"experimental\": \"enabled\"\n}\n" >> ~/.docker/config.json'
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-amd64
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-arm32v7
  - docker pull $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-arm64v8
  - docker manifest create $DOCKER_REGISTRY_DOCKERHUB_REPO:stable $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-amd64
    $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-arm32v7 $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-arm64v8
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:stable $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-amd64
    --os linux --arch amd64
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:stable $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-arm32v7
    --os linux --arch arm --variant 7
  - docker manifest annotate $DOCKER_REGISTRY_DOCKERHUB_REPO:stable $DOCKER_REGISTRY_DOCKERHUB_REPO:stable-arm64v8
    --os linux --arch arm64 --variant 8
  - docker manifest push $DOCKER_REGISTRY_DOCKERHUB_REPO:stable
sast:
  stage: test
